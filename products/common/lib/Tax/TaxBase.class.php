<?php

/*
 * Generated by SuperAdmin Generator date : 28/04/13 21:56:09
 */
 
class TaxBase extends mfObject2 {
    
    const table="t_products_taxes";     
        protected static $fields=array('rate','description','created_at','updated_at');
    protected static $foreignKeys=array(); 
    protected static $fieldsNull=array(); 
    
  function __construct($parameters=null,$site=null) {
      parent::__construct(null,$site);    
    $this->getDefaults();  
    if ($parameters===null) return $this;  
      if (is_array($parameters)||$parameters instanceof ArrayAccess)
      {
           if (isset($parameters['id']))
               return $this->loadById((string)$parameters['id']);          
           if (isset($parameters['rate']))
               return $this->loadByRate((string)$parameters['rate']);                     
            return $this->add($parameters);
      }   
      else
      {
         if (is_numeric((string)$parameters)) 
             return $this->loadbyId((string)$parameters);
         return $this->loadByRate((string)$parameters['rate']);     
      }   
    }
    
    protected function loadByRate($rate)
    {             
        $this->set('rate',$rate);       
        $db=mfSiteDatabase::getInstance()
          ->setParameters(array('rate'=>$rate))
          ->setQuery("SELECT * FROM ".self::getTable()." WHERE `rate`='{rate}';")
          ->makeSiteSqlQuery($this->site);          
         return $this->rowtoObject($db);
    }   
    
    protected function executeLoadById($db)
    {
         $db->setQuery("SELECT * FROM ".self::getTable()." WHERE ".self::getKeyName()."=%d;")
            ->makeSiteSqlQuery($this->site);   
    }
    
    protected function getDefaults()
    {

	$this->rate=isset($this->rate)?$this->rate:"0.000";
	$this->created_at=isset($this->created_at)?$this->created_at:date("Y-m-d H:i:s");
	$this->updated_at=isset($this->updated_at)?$this->updated_at:date("Y-m-d H:i:s");

    }
    
    protected function executeInsertQuery($db)
    {
         $db->makeSiteSqlQuery($this->site);   
    }
    
    function getValuesForUpdate()
    {
       $this->set('updated_at',date("Y-m-d H:i:s"));      
    }   
    
    protected function executeUpdateQuery($db)
    {
              $db->setQuery("UPDATE ".self::getTable()." SET " . $this->getFieldsForUpdate() . " WHERE ".self::getKeyName()."=%d ;")
           
          ->makeSiteSqlQuery($this->site);    
    }
    
    protected function executeDeleteQuery($db)
    {     
                $db->setQuery("DELETE FROM ".self::getTable()." WHERE ".self::getKeyName()."=%d;")
                   ->makeSiteSqlQuery($this->site);     
    }
    
    protected function executeIsExistQuery($db)    
    {
      
      $key_condition=($this->getKey())?" AND ".self::getKeyName()."!='%s';":"";
      $db->setParameters(array('rate'=>$this->rate,$this->getKey()))
         ->setQuery("SELECT ".self::getKeyName()." FROM ".self::getTable()." WHERE `rate`='{rate}'".$key_condition)
         ->makeSiteSqlQuery($this->site); 
    }
    
    /*
     * Getter Methods
     */
    function getId()
    {
      return $this->id;
    }
    
      function getRate()
    {
      return floatval($this->rate);
    }
    
        function getDescription()
    {
      return $this->description;
    }
    

    
        function getCreatedAt()
    {
      return $this->created_at;
    }
    
        function getUpdatedAt()
    {
      return $this->updated_at;
    }
    
          
    
    function __toString() {
        return (string)($this->get('rate') * 100);
    }
    
    function getFormattedTax()
    {
        return format_pourcentage($this->get('rate'));
    }
}



